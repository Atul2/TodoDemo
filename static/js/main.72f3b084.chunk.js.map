{"version":3,"sources":["ListView.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["ListViewCompo","props","state","item","todoItems","console","log","this","itemlist","map","e","i","onClick","preventDefault","deleteThisITem","id","Component","Todo","onChangeHandler","bind","addData","delete","event","inputVal","target","value","setState","iteminstance","push","splice","className","type","onChange","ListView","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA6BeA,E,kDAxBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,GACNC,UAAU,IAJC,E,0CAOnB,WAAU,IAAD,OAET,OADIC,QAAQC,IAAIC,KAAKN,OAEjB,mCAEI,8BACCM,KAAKN,MAAMO,UAAYD,KAAKN,MAAMO,SAASC,KAAI,SAACC,EAAGC,GAAJ,OAC5C,+BAAaD,EAAE,sBAAME,QAAS,SAAAF,GAAOA,EAAEG,iBAAkB,EAAKZ,MAAMa,eAAeH,IAAOI,GAAIJ,EAA/E,SAAkF,yCAAxFA,c,GAhBGK,aC0DbC,E,kDAxDX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,GACNC,UAAU,IAEd,EAAKc,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKE,OAAS,EAAKA,OAAOF,KAAZ,gBARC,E,mDAWnB,SAAgBG,GACZ,IAAIC,EAAWD,EAAME,OAAOC,MAC5BlB,KAAKmB,SAAS,CACVvB,KAAKoB,M,qBAIb,WACI,IAAIA,EAAWhB,KAAKL,MAAMC,KACtBwB,EAAepB,KAAKL,MAAME,UAC9BuB,EAAaC,KAAKL,GAClBhB,KAAKmB,SAAS,CACVtB,UAAWuB,EACXxB,KAAK,KAETE,QAAQC,IAAIC,KAAKL,MAAME,a,oBAG3B,SAAOW,GAEH,IAAIY,EAAepB,KAAKL,MAAME,UAC/BuB,EAAaE,OAAOd,EAAG,GACtBR,KAAKmB,SAAS,CACVtB,UAAUuB,IAEdtB,QAAQC,IAAIS,K,oBAIhB,WAIA,OACI,0CAAI,uDACA,sBAAKe,UAAU,SAAf,UACI,uBAAOC,KAAK,OAAON,MAAOlB,KAAKL,MAAMC,KAAM6B,SAAUzB,KAAKW,kBAC1D,wBAAQN,QAASL,KAAKa,QAAtB,oBAEJ,cAACa,EAAD,CAAUzB,SAAUD,KAAKL,MAAME,UAAWU,eAAgBP,KAAKc,gB,GApDxDL,aCWJkB,E,4JATb,WACE,OACE,qBAAKJ,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJUd,aCQHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.72f3b084.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass ListViewCompo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            item: \"\",\r\n            todoItems:[]\r\n        }\r\n    }\r\n    render() {\r\n        console.log(this.props);\r\n    return (\r\n        <>\r\n\r\n            <div>\r\n            {this.props.itemlist && this.props.itemlist.map((e, i) =>\r\n                <li key={i}>{e}<span onClick={e => { e.preventDefault(); this.props.deleteThisITem(i); }} id={i}><b>   X</b></span></li>\r\n            )\r\n            }\r\n            </div>\r\n           \r\n     </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListViewCompo;\r\n","import React, { Component } from 'react';\nimport ListView from './ListView';\n\nclass Todo extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            item: \"\",\n            todoItems:[]\n        }\n        this.onChangeHandler = this.onChangeHandler.bind(this);\n        this.addData = this.addData.bind(this);\n        this.delete = this.delete.bind(this);\n    }\n\n    onChangeHandler(event){\n        var inputVal = event.target.value;\n        this.setState({\n            item:inputVal\n        })\n    }\n\n    addData() {\n        var inputVal = this.state.item;\n        var iteminstance = this.state.todoItems;\n        iteminstance.push(inputVal);\n        this.setState({\n            todoItems: iteminstance,\n            item:''\n        })\n        console.log(this.state.todoItems)\n    }\n\n    delete(id) {\n        // var id = event.target.id;\n        var iteminstance = this.state.todoItems;\n       iteminstance.splice(id,1);\n        this.setState({\n            todoItems:iteminstance\n        })\n        console.log(id);\n    }\n    \n\n    render() {\n        // var itemlist = this.state.todoItems.map((e, i) => \n        //     <li key={i}>{e}<span onClick={this.delete} id={i}>X</span></li>\n        // )\n    return (\n        <>  <h1>Class Based Todo App </h1>          \n            <div className=\"footer\">\n                <input type=\"text\" value={this.state.item} onChange={this.onChangeHandler} />\n                <button onClick={this.addData}>Add</button>\n            </div>\n            <ListView itemlist={this.state.todoItems} deleteThisITem={this.delete} />\n     </>\n    );\n  }\n}\n\nexport default Todo;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Todo from './Todo';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Todo />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}